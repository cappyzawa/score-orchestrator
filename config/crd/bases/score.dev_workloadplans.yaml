---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: workloadplans.score.dev
spec:
  group: score.dev
  names:
    kind: WorkloadPlan
    listKind: WorkloadPlanList
    plural: workloadplans
    shortNames:
    - wplan
    singular: workloadplan
  scope: Namespaced
  versions:
  - name: v1b1
    schema:
      openAPIV3Schema:
        description: |-
          WorkloadPlan is an internal contract from Orchestrator to the Runtime controller.
          It must not be user-visible via RBAC; status is intentionally omitted.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              WorkloadPlanSpec contains the runtime class and the materialization plan.
              All fields are internal; users should not rely on their concrete shape.
            properties:
              bindings:
                description: Bindings declares resource requirements to be materialized
                  by the runtime.
                items:
                  description: |-
                    PlanBinding declares a binding requirement passed to the runtime controller.
                    It mirrors the resolution keys (type/class/params) used by resolvers.
                  properties:
                    class:
                      description: Class optionally refines the type (PF-specific
                        resolver class).
                      type: string
                    key:
                      description: Key is the logical key (e.g., "db", "cache").
                      type: string
                    params:
                      description: Params are opaque parameters used by the selected
                        resolver/runtime.
                      x-kubernetes-preserve-unknown-fields: true
                    type:
                      description: Type is the abstract resource type (e.g., "postgresql").
                      type: string
                  required:
                  - key
                  - type
                  type: object
                type: array
              observedWorkloadGeneration:
                description: ObservedWorkloadGeneration is the generation of the Workload
                  used to compute this plan.
                format: int64
                type: integer
              projection:
                description: Projection defines how binding outputs are injected into
                  the workload.
                properties:
                  env:
                    items:
                      description: EnvMapping projects a binding output into an environment
                        variable.
                      properties:
                        from:
                          description: From selects the binding output to inject.
                          properties:
                            claimKey:
                              description: ClaimKey is the key under Workload.spec.resources
                                (e.g., "db").
                              type: string
                            outputKey:
                              description: OutputKey is the output field exported
                                by the binding (e.g., "uri").
                              type: string
                          required:
                          - claimKey
                          - outputKey
                          type: object
                        name:
                          description: Name is the environment variable name.
                          type: string
                      required:
                      - from
                      - name
                      type: object
                    type: array
                  files:
                    items:
                      description: FileProjection projects a binding output into a
                        file path (abstract).
                      properties:
                        from:
                          description: From selects the binding output to write to
                            the path.
                          properties:
                            claimKey:
                              description: ClaimKey is the key under Workload.spec.resources
                                (e.g., "db").
                              type: string
                            outputKey:
                              description: OutputKey is the output field exported
                                by the binding (e.g., "uri").
                              type: string
                          required:
                          - claimKey
                          - outputKey
                          type: object
                        path:
                          description: Path is a file path inside the container filesystem.
                          type: string
                      type: object
                    type: array
                  volumes:
                    items:
                      description: VolumeProjection projects a binding output into
                        a volume (abstract).
                      properties:
                        from:
                          description: From selects the binding output to project
                            into the volume.
                          properties:
                            claimKey:
                              description: ClaimKey is the key under Workload.spec.resources
                                (e.g., "db").
                              type: string
                            outputKey:
                              description: OutputKey is the output field exported
                                by the binding (e.g., "uri").
                              type: string
                          required:
                          - claimKey
                          - outputKey
                          type: object
                        name:
                          description: Name is a logical volume name.
                          type: string
                      type: object
                    type: array
                type: object
              runtimeClass:
                description: RuntimeClass is the selected runtime controller class.
                type: string
              template:
                description: Template contains the reference and type information
                  for runtime materialization.
                properties:
                  kind:
                    description: 'Kind is the template type: "manifests" | "helm"
                      | "kustomize"'
                    type: string
                  ref:
                    description: Ref is the immutable reference (OCI digest recommended)
                    type: string
                  values:
                    description: Values are optional default template values
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - kind
                - ref
                type: object
              values:
                description: Values contains the composed template values (defaults
                  ⊕ normalize(Workload) ⊕ outputs).
                type: object
                x-kubernetes-preserve-unknown-fields: true
              workloadRef:
                description: WorkloadRef identifies the source Workload of this plan.
                properties:
                  name:
                    description: Name is the Workload name.
                    type: string
                  namespace:
                    description: Namespace is the Workload namespace.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - observedWorkloadGeneration
            - runtimeClass
            - workloadRef
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
