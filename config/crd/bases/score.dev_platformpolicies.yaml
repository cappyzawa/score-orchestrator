---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: platformpolicies.score.dev
spec:
  group: score.dev
  names:
    kind: PlatformPolicy
    listKind: PlatformPolicyList
    plural: platformpolicies
    shortNames:
    - ppol
    singular: platformpolicy
  scope: Cluster
  versions:
  - name: v1b1
    schema:
      openAPIV3Schema:
        description: |-
          PlatformPolicy is a PF-facing cluster-scoped policy; it is hidden from regular users via RBAC.
          Orchestrator consumes it to apply defaults, select resolvers, and drive plan generation.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              PlatformPolicySpec holds targeting, runtime class selection, defaults, resolver routing,
              projection defaults, and endpoint derivation policy. No status subresource.
            properties:
              defaults:
                description: Defaults supplies platform-level defaults (applied during
                  plan generation).
                properties:
                  exposure:
                    description: |-
                      ExposureDefaults declares an abstract exposure strategy for endpoints (e.g. public/private/cluster).
                      Concrete runtime details must not leak to user-visible status.
                    properties:
                      strategy:
                        type: string
                    type: object
                  replicas:
                    description: |-
                      ReplicasDefault defines min/max/default replica hints used when a plan omits replicas.
                      Runtimes may clamp to quotas; values are hints, not guarantees.
                    properties:
                      default:
                        format: int32
                        type: integer
                      max:
                        format: int32
                        type: integer
                      min:
                        format: int32
                        type: integer
                    type: object
                type: object
              endpointPolicy:
                description: EndpointPolicy defines how to compute a single canonical
                  endpoint for the workload.
                properties:
                  preferHTTPS:
                    description: PreferHTTPS indicates that an HTTPS endpoint should
                      be preferred when multiple exist.
                    type: boolean
                  template:
                    description: Template renders a URL; platforms may expose canonicity
                      rules (e.g., host templating).
                    type: string
                type: object
              projectionDefaults:
                description: ProjectionDefaults define default env/volume/file mappings
                  from binding outputs.
                properties:
                  env:
                    items:
                      description: EnvProjectionRule maps a binding output to an environment
                        variable.
                      properties:
                        from:
                          description: |-
                            ProjectionFrom declares a binding output to project into the workload (env/volumes/files).
                            The tuple (bindingKey, outputKey) must refer to a produced binding output at runtime.
                          properties:
                            bindingKey:
                              type: string
                            outputKey:
                              type: string
                          required:
                          - bindingKey
                          - outputKey
                          type: object
                        name:
                          type: string
                      required:
                      - from
                      - name
                      type: object
                    type: array
                  files:
                    items:
                      description: FileProjectionRule maps a binding output to a file
                        path inside the container filesystem.
                      properties:
                        from:
                          description: |-
                            ProjectionFrom declares a binding output to project into the workload (env/volumes/files).
                            The tuple (bindingKey, outputKey) must refer to a produced binding output at runtime.
                          properties:
                            bindingKey:
                              type: string
                            outputKey:
                              type: string
                          required:
                          - bindingKey
                          - outputKey
                          type: object
                        path:
                          type: string
                      type: object
                    type: array
                  volumes:
                    items:
                      description: VolumeProjectionRule maps a binding output to a
                        volume (abstract, runtime-independent).
                      properties:
                        from:
                          description: |-
                            ProjectionFrom declares a binding output to project into the workload (env/volumes/files).
                            The tuple (bindingKey, outputKey) must refer to a produced binding output at runtime.
                          properties:
                            bindingKey:
                              type: string
                            outputKey:
                              type: string
                          required:
                          - bindingKey
                          - outputKey
                          type: object
                        name:
                          type: string
                      type: object
                    type: array
                type: object
              resolverRouting:
                additionalProperties:
                  description: |-
                    ResolverClass selects a resolver implementation and optional parameters.
                    The map key is a resource type (e.g. "postgresql"), resolved by platform policy.
                  properties:
                    class:
                      description: Class is the resolver class name understood by
                        the platform (PF-facing, not user-facing).
                      type: string
                    params:
                      description: Params are resolver-specific options (opaque to
                        the orchestrator).
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - class
                  type: object
                description: ResolverRouting maps resource type -> resolver class/params.
                type: object
              runtimeClass:
                description: RuntimeClass selects the runtime controller class (PF-facing
                  identifier).
                type: string
              targeting:
                description: Targeting restricts which Workloads/Namespaces the policy
                  applies to.
                properties:
                  namespaceSelector:
                    description: NamespaceSelector selects Namespaces by their labels
                      (Kubernetes LabelSelector semantics).
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  workloadSelector:
                    description: WorkloadSelector selects Workloads by their labels
                      (Kubernetes LabelSelector semantics).
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
